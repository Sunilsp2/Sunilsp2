USE DATABASE DEMO_DATABASE;
 CREATE TABLE SP_SALES_DATA
 (ORDER_ID VARCHAR(100),
  ORDER_DATE DATE,
  SHIP_DATE DATE,
  SHIP_MODE VARCHAR(100),
  CUSTOMER_NAME VARCHAR(100),
  SEGMENT VARCHAR(100),
  STAET VARCHAR(100),
  COUNTRY VARCHAR(100),
  MARKET VARCHAR(100),
  REGION VARCHAR(100),
  PROODUCT_ID VARCHAR(100)PRIMARY KEY,
  CATEGORY VARCHAR(100),
  SUB_CATEGORY VARCHAR(100),
  PRODUCT_NAME VARCHAR(200),
  SALES NUMBER(20,0),
  QUANTITY NUMBER(5,0),
  DISCOUNT NUMBER(5,3),
  PROFIT NUMBER(20,10),
  SHIPPING_COST NUMBER(20,5),
  ORDER_PRIORITY VARCHAR(100),
  YEAR NUMBER(10,0));
  
 DESCRIBE TABLE SP_SALES_DATA;
 SELECT * FROM SP_SALES_DATA;
 SELECT SUM(SALES) FROM SP_SALES_DATA;
 
 --ADDING PRIMARY KEY
 
 ALTER TABLE SP_SALES_DATA
 ADD PRIMARY KEY(ORDER_ID);
 
 CREATE OR REPLACE TABLE SP_SALES_DATA_COPY AS
 SELECT * FROM SP_SALES_DATA;
 
 DESCRIBE TABLE SP_SALES_DATA_COPY;
 SELECT * FROM SP_SALES_DATA_COPY;
 
 
 --EXTRACTING LAST VALUES FROM ORDER_ID
 
 ALTER TABLE SP_SALES_DATA_COPY
 ADD COLUMN ORDER_ID2 NUMBER(20,0);

 UPDATE  SP_SALES_DATA_COPY
 SET ORDER_ID2 = RIGHT(ORDER_ID, LEN(ORDER_ID)-8)
 WHERE ORDER_ID2 IS NULL;
 
 
 --DISCOUNT FLAG
 
 SELECT *,
      CASE
          WHEN DISCOUNT > '0' THEN 'YES'
          ELSE 'FALSE'
      END AS DISCOUNT_FLAG
 FROM SP_SALES_DATA_COPY;
 
 
 --NUMBER OF DAYS TAKEN FOR SHIPMENT OF ORDER
 
 ALTER TABLE SP_SALES_DATA_COPY
 ADD COLUMN DATE_DIFFERENCE NUMBER(10,0);
 
 UPDATE SP_SALES_DATA_COPY
 SET DATE_DIFFERENCE = DATEDIFF('DAYS', ORDER_DATE,SHIP_DATE)
 WHERE DATE_DIFFERENCE IS NULL;
 
 
--FLAG THE PROCESS DAY AS BY RATING

SELECT *,
      CASE
          WHEN DATE_DIFFERENCE <= 3 THEN '5'
          WHEN DATE_DIFFERENCE <= 6 AND DATE_DIFFERENCE > 3 THEN '4'
          WHEN DATE_DIFFERENCE <= 10 AND DATE_DIFFERENCE > 6 THEN '3'
          WHEN DATE_DIFFERENCE > 10 THEN '2'
          ELSE '1'
      END AS SERVICE_RATINGS
      FROM SP_SALES_DATA_COPY;
